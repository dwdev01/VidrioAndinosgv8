{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

<article class="my-0 opacity-0 transition-all duration-300" {{ attributes.addClass('node') }}>
  {{ title_prefix }}
  {% if not page %}
  <h2{{ title_attributes }}>
    <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
    {% endif %}
    {{ title_suffix }}

    {% if display_submitted %}
    <footer>
      {{ author_picture }}
      <div{{ author_attributes }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
        </div>
    </footer>
    {% endif %}

    <div class="container grid grid-cols-2 gap-10 mt-16">
      <div id="col-1" class="flex flex-col">

        <div class="glider-contain multiple">
          <button class="glider-prev bg-blue-500 rounded p-3 text-xl text-white">
            <i class="fa fa-chevron-left"></i>
          </button>
          <button class="glider-next bg-blue-500 rounded p-3 text-xl text-white">
            <i class="fa fa-chevron-right"></i>
          </button>
          <div class="glider" style="height: 100%; max-height: 365px">

          </div>
          <div class="glider-dots" id="dots"></div>
        </div>

        <div class="posibilidades pb-4 mb-4 border-b border-gray-500">
          <h6 class="font-bold text-gray-800 ">Posibilidades de Transformación</h6>
          <ul id="transformationAfterContent" class="flex pt-3 flex-wrap">
          </ul>
        </div>
        <div class="beneficos pb-4 mb-4 border-b border-gray-500">
          <h6 class="font-bold text-gray-800 ">Beneficios</h6>
          <ul id="beneficiosAfterContent" class="flex pt-3 flex-wrap">
          </ul>
        </div>
        <div class="descarga pb-4 mb-4">
          <h6 class="font-bold text-gray-800 ">Descargas</h6>
          <ul id="descargasContent" class="pt-3 flex flex-wrap"></ul>
        </div>
      </div>
      <div id="col-2">
        <div class="accordion mb-2 ">
          <div class="accordion__button transition duration-300" id="item1">Descripción</div>
          <div class="accordion__content leading-relaxed text-sm px-4" id="descriptionAftterContent">
          </div>
        </div>
        <div class="accordion mb-2">
          <div class="accordion__button" id="item4">Ventajas</div>
          <div class="accordion__content">
            <ul id="advantageAfterContent" class="px-4">

            </ul>
          </div>
        </div>
        <div class="accordion mb-2">
          <div class="accordion__button" id="item5">Aplicaciones</div>
          <div class="accordion__content">
            <ul id="applicationsAfterContent" class="px-4">

            </ul>
          </div>
        </div>
        <div class="bg-blue-600 mt-4">
          <span class="block pt-4 m-0 text-center mx-auto text-white font-bold text-lg">¿Quieres más información?</span>
          <span class="block text-center mx-auto text-white font-bold text-lg">¡Escríbenos!</span>
          <div class="vd-formProduct" id="productForm">
          </div>
          <span class="block text-center text-white pb-4">También puedes <a href="#" class="text-orange-300 hover:underline">contactarnos aquí</a></span>
        </div>
        <span class="text-lg font-medium text-gray-700">Compartir</span>
        <div class="flex mt-2">
          <a id="shareFB" target="_blank" class="flex
                   justify-center
                   items-center 
                    transition 
                    duration-300 
                    rounded 
                    mr-2 
                    w-auto 
                    text-xl 
                    p-1 
                    bg-blue-800 
                    hover:bg-blue-700 
                    text-white" style="width: 36px !important; height: 38px !important">
            <i class="icon-facebook"></i>
          </a>
          <a id="shareWP" target="_blank" class="flex
                    justify-center
                    items-center 
                    transition 
                    duration-300 
                    rounded 
                    mr-2 
                    w-auto 
                    text-xl 
                    p-1 
                    bg-green-500 
                    hover:bg-green-400 
                    text-white" style="width: 36px !important; height: 38px !important">
            <i class="icon-whatsapp"></i>
          </a>
          <a id="shareLK" target="_blank" class="flex
                    justify-center
                    items-center 
                     transition 
                     duration-300 
                     rounded 
                     w-auto 
                     text-xl 
                     p-1 
                     bg-blue-600 
                     hover:bg-blue-500  
                     text-white" style="width: 36px !important; height: 38px !important">
            <i class="icon-linkedin"></i>
          </a>
        </div>
      </div>
    </div>

    <div{{ content_attributes.addClass('node-content') }}>
      {{ content }}
      </div>

</article>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const gliderAfterContent = document.querySelector('.glider'),
      gliderBeforeContent = Array.from(document.querySelectorAll('.gliderBeforeContent')),
      gliderContent = document.createDocumentFragment();

    await gliderBeforeContent.forEach(item => {
      item.firstElementChild.classList.add('object-cover')
      gliderContent.appendChild(item.firstElementChild)
    })

    gliderAfterContent.appendChild(gliderContent)
    // Glider
    new Glider(document.querySelector(".glider"), {
      slidesToShow: 1,
      dots: "#dots",
      draggable: true,
      arrows: {
        prev: ".glider-prev",
        next: ".glider-next"
      }
    });

    gliderAfterContent.firstElementChild.classList.add('h-full');
    gliderAfterContent.firstElementChild.style.maxHeight = '365px'

    // Tabs
    await document.querySelectorAll(".accordion__button").forEach(button => {
      button.addEventListener("click", e => {
        const accordionContent = e.target.nextElementSibling;
        if (e.target.classList.contains("accordion__button--active")) {
          e.target.classList.remove("accordion__button--active");
          e.target.nextElementSibling.style.maxHeight = 0;
        } else {
          document
            .querySelectorAll(".accordion__button")
            .forEach(removeClass => {
              if (
                removeClass.classList.contains("accordion__button--active")
              ) {
                removeClass.classList.remove("accordion__button--active");
                removeClass.nextElementSibling.style.maxHeight = 0;
              }
            });
          e.target.classList.add("accordion__button--active");
          if (e.target.classList.contains("accordion__button--active")) {
            accordionContent.style.maxHeight =
              accordionContent.scrollHeight + "px";
          } else {
            accordionContent.style.maxHeight = 0;
          }
        }
      });
    });
    // Description
    const descriptionAftterContent = document.getElementById('descriptionAftterContent'),
      descriptionBeforeContent = document.getElementById('descriptionBeforeContent');

    descriptionAftterContent.innerHTML = descriptionBeforeContent.innerHTML
    // Ventajas
    const advantageAfterContent = document.getElementById('advantageAfterContent');
    let advantageBeforeContent = document.getElementById('advantageBeforeContent');
    const advantageContent = document.createDocumentFragment()

    await advantageBeforeContent.textContent.split(',').forEach(item => {
      if (item.trim() !== "") {
        let advantageItem = document.createElement('li')
        advantageItem.classList.add('mb-3', 'flex', 'text-sm')
        advantageItem.innerHTML = `<i class="icon-ok-circled mr-2"></i> ${item.trim()}`
        advantageContent.appendChild(advantageItem)
      }
    })

    advantageAfterContent.appendChild(advantageContent)

    // Aplicaciones
    const applicationsAfterContent = document.getElementById('applicationsAfterContent');
    let applicationsBeforeContent = document.getElementById('applicationsBeforeContent');
    const applicationContent = document.createDocumentFragment()

    await applicationsBeforeContent.textContent.split(',').forEach(item => {
      if (item.trim() !== "") {
        let applicationItem = document.createElement('li')
        applicationItem.classList.add('mb-3', 'flex', 'text-sm')
        applicationItem.innerHTML = `<i class="icon-ok-circled mr-2"></i> ${item.trim()}`
        applicationContent.appendChild(applicationItem)
      }
    })

    applicationsAfterContent.appendChild(applicationContent)

    // Posibilidades de Transformación

    const transformationBeforeLinks = Array.from(document.getElementById('transformationBeforeLinks').children),
      transformationContent = document.createDocumentFragment(),
      transformationAfterContent = document.getElementById('transformationAfterContent');

    // New
    await transformationBeforeLinks.forEach(item => {
      let link = item.children[0],
        image = '';

      switch (link.textContent.toUpperCase()) {
        case 'SERIGRAFIADO':
          image = '/sites/sgva.master/files/inline-images/Serigrafiado.png'
          break;
        case 'LAMINADO':
          image = '/sites/sgva.master/files/inline-images/laminado.png'
          break;
        case 'TEMPLADO':
          image = '/sites/sgva.master/files/inline-images/fuego.png'
          break;
        case 'CURVADO':
          image = '/sites/sgva.master/files/inline-images/curvas.png'
          break;
      }

      link.classList.add('flex', 'flex-col', 'text-gray-800', 'hover:text-blue-500')
      link.innerHTML = `
        <div class="flex justify-center items-center text-white mb-2 p-2">
          <img src="${image}" width="43px" height="43px"/>
        </div>
        <span class="font-medium  text-sm w-32 text-center">${link.textContent}</span>
      `
      transformationContent.appendChild(link)
    })

    transformationAfterContent.appendChild(transformationContent)

    // Beneficios
    const beneficiosBeforeContent = document.getElementById('beneficiosBeforeContent'),
      beneficiosContent = document.createDocumentFragment(),
      beneficiosAfterContent = document.getElementById('beneficiosAfterContent');
    const beneficiosLinks = document.getElementById('beneficiosLinks'),
      beneficiosLinksFragment = document.createDocumentFragment();

    await Array.from(beneficiosLinks.children).forEach(item => {
      let link = item.children[0],
        color = '',
        image = '',
        title = link.textContent.trim();

      link.textContent = ''
      switch (title.toUpperCase()) {
        case 'CONFORT TÉRMICO':
          color = 'bn-mustard'
          image = '/sites/sgva.master/files/inline-images/icon-confort-termico.png'
          break;
        case 'PROTECCIÓN UV':
          color = 'bn-orange'
          image = '/sites/sgva.master/files/inline-images/icon-proteccion.png'
          break;
        case 'CONFORT VISUAL':
          color = 'bn-blue'
          image = '/sites/sgva.master/files/inline-images/Confort%20Visual.png'
          break;
        case 'CONFORT ACÚSTICO':
          color = 'bn-purple'
          image = '/sites/sgva.master/files/inline-images/Confort%20Acu%CC%81stico.png'
          break;
        case 'AHORRO ENERGÉTICO':
          color = 'bn-darkblue'
          image = '/sites/sgva.master/files/inline-images/Ahorro%20Energe%CC%81tico.png'
          break;
        case 'MEDIO AMBIENTE':
          color = 'bn-green'
          image = '/sites/sgva.master/files/inline-images/Proteccio%CC%81n%20del%20medio%20ambiente.png'
          break;
        case 'SEGURIDAD':
          color = 'bn-magenta'
          image = '/sites/sgva.master/files/inline-images/Seguridad.png'
          break;
        case 'PRIVACIDAD':
          color = 'bn-yellow'
          image = '/sites/sgva.master/files/inline-images/Proteccio%CC%81n%20contra%20el%20fuego.png'
          break;
        case 'DISEÑO ESTÉTICO':
          color = 'bn-darkpurple'
          image = '/sites/sgva.master/files/inline-images/Disen%CC%83o%20Este%CC%81tico.png'
          break;
        case 'PROTECCIÓN CONTRA EL FUEGO':
          color = 'bn-yellow'
          image = '/sites/sgva.master/files/inline-images/Proteccio%CC%81n%20contra%20el%20fuego.png'
          break;
      }
      link.classList.add('flex', 'flex-col', 'items-center', 'mb-3', 'mr-3', 'justify-center', 'font-medium', 'text-gray-800', 'hover:text-blue-500', 'text-sm', 'w-32', 'text-center');
      link.innerHTML += `
        <div class="${color} flex justify-center items-center text-white mb-2 p-2" style="background-color: var(--bg); width: 56px; height: 56px;">
          <img src="${image}" style="width:40px; height: 40px"/>
        </div>
        <span class="h-10">${title}</span>
      `
      beneficiosLinksFragment.appendChild(link)
      beneficiosAfterContent.appendChild(beneficiosLinksFragment)
    })
    beneficiosLinks.appendChild(beneficiosLinksFragment)
    // Descargas
    const descargasContent = document.getElementById('descargasContent');
    // Ficha Tecnica
    const fichaBeforeContent = document.getElementById('fichaBeforeContent').firstElementChild.firstElementChild,
      fichaContent = document.createDocumentFragment(),
      fichaItem = document.createElement('li')

    fichaItem.innerHTML = `
        <a href="${fichaBeforeContent.href}" type="${fichaBeforeContent.type}" class="flex flex-col items-center mr-4 text-gray-800 hover:text-blue-500" style="width: fit-content" download>
          <img src="/sites/sgva.master/files/inline-images/ficha-icon.png" alt="Ficha Técnica" style="width: 62px; height: 62px" />
          <span class="pt-3 font-medium text-sm w-24 text-center">Guía práctica de instalación y limpieza</span>
        </a>
      `
    fichaContent.appendChild(fichaItem)
    descargasContent.appendChild(fichaContent)

    // Artículos de Prensa
    const articleBeforeContent = document.getElementById('articleBeforeContent').firstElementChild.firstElementChild,
      articleContent = document.createDocumentFragment(),
      articleAfterContent = document.getElementById('articleAfterContent');

    const articleItem = document.createElement('li')
    articleItem.innerHTML = `
        <a href="${articleBeforeContent.href}" type="${articleBeforeContent.type}" class="flex flex-col items-center text-gray-800 hover:text-blue-500" style="width: fit-content" download>
          <img src="/sites/sgva.master/files/inline-images/article-icon.png" alt="Artìculos de prensa" style="width: 64px; height: 62px" />
          <span class="pt-3 font-medium text-sm w-24 text-center">Artìculos de prensa</span>
        </a>
      `
    articleContent.appendChild(articleItem)
    descargasContent.appendChild(articleContent)

    // Product Form
    const productFormContent = document.getElementById('productForm'),
      productFormFragment = document.createDocumentFragment(),
      productForm = document.querySelector('form');

    productFormFragment.appendChild(productForm)
    productFormContent.appendChild(productFormFragment)

    // Share Social medias
    const shareFB = document.getElementById('shareFB'),
      shareWP = document.getElementById('shareWP'),
      shareLK = document.getElementById('shareLK');

    shareFB.href = `https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`
    shareWP.href = `https://api.whatsapp.com/send?text=${window.location.href}`
    shareLK.href = `https://www.linkedin.com/shareArticle?mini=true&url=${window.location.href}`

    // Page title
    document.getElementById('productTitle').parentElement.classList.add('text-center')



    document.querySelectorAll('.opacity-0').forEach(item => {
      item.classList.remove('opacity-0');

      setTimeout(function() {

      })
    }, 500)

  })
</script>